package mycalculator_group6;

import java.awt.Font;
import java.util.ArrayList;
import java.util.Stack;
import javax.swing.JButton;
import java.text.DecimalFormat;

public class CalculatorJFrame extends javax.swing.JFrame {
    
    private Double num, result, memorySum =0.0 ;
    private char operator;
    private Stack<Double> stackNum = new Stack<>();
    private Stack<Character> stackOperator = new Stack<>();
    private ArrayList<String> history = new ArrayList<>();
    private String Expression = " ";
    private boolean isResultDisplayed = false;
    private boolean isHistoryVisible = false;

    
    public CalculatorJFrame() {
        initComponents();
        txtDisplay.setFont(new Font("Arial", Font.BOLD, 24));
        setVisible(true);
        txtHistory.setFont(new Font("Arial", Font.BOLD, 24));
    }
    private void save() {
        if (!txtDisplay.getText().isEmpty()) {
            num = Double.parseDouble(txtDisplay.getText()); // Lấy số hiện tại từ txtDisplay
            stackNum.push(num); // đẩy num vào stack
            //debug
            System.err.println("Dẩy vào stack " +num);
            
            if(Expression.isEmpty()){
                Expression = txtDisplay.getText()+ " " +operator +" "; // gắn giá trị trên txtDisplay vào Expression
            }else{
                Expression += txtDisplay.getText()+ " " +operator +" ";
            }
            // Nếu toán tử trước là *, /, %, tính ngay lập tức
            if (!stackOperator.isEmpty() && (stackOperator.peek() == 'x' || stackOperator.peek() == '/' || stackOperator.peek() == '%' || stackOperator.peek() == '^'|| stackOperator.peek() == '√')) {
                calculateImmediate(); // Tính ngay nếu có nhân/chia trước đó
            }
        }
        txtDisplay.setText(""); // Xóa màn hình để nhập số tiếp theo
        stackOperator.push(operator); 
        //debug
        System.err.println("Dẩy vào operator " +operator);

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textField1 = new java.awt.TextField();
        num0 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn_equal = new javax.swing.JButton();
        btn_demical = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn_plus = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn_subtract = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn_multi = new javax.swing.JButton();
        btn_divide = new javax.swing.JButton();
        btn_sqrt = new javax.swing.JButton();
        btn_ab = new javax.swing.JButton();
        btn_percen = new javax.swing.JButton();
        btn_C = new javax.swing.JButton();
        btn_del = new javax.swing.JButton();
        txtDisplay = new java.awt.TextField();
        label1 = new java.awt.Label();
        btn_back = new javax.swing.JButton();
        txtHistory = new java.awt.TextArea();

        textField1.setText("textField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        num0.setBackground(new java.awt.Color(204, 204, 255));
        num0.setText("0");
        num0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberButtonActionPerformed(evt);
            }
        });

        btn2.setBackground(new java.awt.Color(204, 204, 255));
        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberButtonActionPerformed(evt);
            }
        });

        btn4.setBackground(new java.awt.Color(204, 204, 255));
        btn4.setText("4");
        btn4.setAlignmentX(0.2F);
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberButtonActionPerformed(evt);
            }
        });

        btn_equal.setText("=");
        btn_equal.setName("btn="); // NOI18N
        btn_equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_equalActionPerformed(evt);
            }
        });

        btn_demical.setBackground(new java.awt.Color(204, 204, 255));
        btn_demical.setText(".");
        btn_demical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_demicalActionPerformed(evt);
            }
        });

        btn3.setBackground(new java.awt.Color(204, 204, 255));
        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberButtonActionPerformed(evt);
            }
        });

        btn1.setBackground(new java.awt.Color(204, 204, 255));
        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberButtonActionPerformed(evt);
            }
        });

        btn5.setBackground(new java.awt.Color(204, 204, 255));
        btn5.setText("5");
        btn5.setAlignmentX(0.2F);
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberButtonActionPerformed(evt);
            }
        });

        btn6.setBackground(new java.awt.Color(204, 204, 255));
        btn6.setText("6");
        btn6.setAlignmentX(0.2F);
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberButtonActionPerformed(evt);
            }
        });

        btn_plus.setBackground(new java.awt.Color(204, 204, 255));
        btn_plus.setText("+");
        btn_plus.setName("btn+"); // NOI18N
        btn_plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_plusActionPerformed(evt);
            }
        });

        btn8.setBackground(new java.awt.Color(204, 204, 255));
        btn8.setText("8");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberButtonActionPerformed(evt);
            }
        });

        btn_subtract.setBackground(new java.awt.Color(204, 204, 255));
        btn_subtract.setText("-");
        btn_subtract.setName("btn-"); // NOI18N
        btn_subtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_subtractActionPerformed(evt);
            }
        });

        btn9.setBackground(new java.awt.Color(204, 204, 255));
        btn9.setText("9");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberButtonActionPerformed(evt);
            }
        });

        btn7.setBackground(new java.awt.Color(204, 204, 255));
        btn7.setText("7");
        btn7.setName("btn7"); // NOI18N
        btn7.setOpaque(true);
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberButtonActionPerformed(evt);
            }
        });

        btn_multi.setBackground(new java.awt.Color(204, 204, 255));
        btn_multi.setText("x");
        btn_multi.setName("btnX"); // NOI18N
        btn_multi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_multiActionPerformed(evt);
            }
        });

        btn_divide.setBackground(new java.awt.Color(204, 204, 255));
        btn_divide.setText("/");
        btn_divide.setName("btn/"); // NOI18N
        btn_divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_divideActionPerformed(evt);
            }
        });

        btn_sqrt.setBackground(new java.awt.Color(204, 204, 255));
        btn_sqrt.setText("√");
        btn_sqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sqrtActionPerformed(evt);
            }
        });

        btn_ab.setBackground(new java.awt.Color(204, 204, 255));
        btn_ab.setText("x^y");
        btn_ab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_abActionPerformed(evt);
            }
        });

        btn_percen.setBackground(new java.awt.Color(204, 204, 255));
        btn_percen.setText("%");
        btn_percen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_percenActionPerformed(evt);
            }
        });

        btn_C.setBackground(new java.awt.Color(255, 153, 0));
        btn_C.setText("C");
        btn_C.setName("btnC"); // NOI18N
        btn_C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CActionPerformed(evt);
            }
        });

        btn_del.setBackground(new java.awt.Color(255, 204, 0));
        btn_del.setText("D");
        btn_del.setToolTipText("");
        btn_del.setName("btnDel"); // NOI18N
        btn_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delActionPerformed(evt);
            }
        });

        txtDisplay.setName("txtDisplay"); // NOI18N
        txtDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDisplayActionPerformed(evt);
            }
        });

        label1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label1.setText("Group_6");

        btn_back.setBackground(new java.awt.Color(153, 153, 153));
        btn_back.setText("<-");
        btn_back.setName("btnMR"); // NOI18N
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        txtHistory.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtHistory.setEditable(false);
        txtHistory.setName("txtHistory"); // NOI18N
        txtHistory.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDisplay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(num0, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_demical, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_ab, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_sqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_percen, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btn_equal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(btn_plus, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(btn_subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(btn_multi, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(btn_divide, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn_del, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btn_C, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_ab)
                    .addComponent(btn_sqrt)
                    .addComponent(btn_percen)
                    .addComponent(btn_back))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_C, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_del, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_multi, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_divide, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_plus, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(btn_equal, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(num0, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_demical, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        txtDisplay.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_plusActionPerformed
        num = Double.parseDouble(txtDisplay.getText());
        operator = '+';
        save();
    }//GEN-LAST:event_btn_plusActionPerformed

    private void btn_subtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_subtractActionPerformed
        if(txtDisplay.getText().isEmpty()|| txtDisplay.getText().equals("0")){
           txtDisplay.setText("-");
        }else{
            num = Double.parseDouble(txtDisplay.getText());
            operator = '-';
            save();
        }
    }//GEN-LAST:event_btn_subtractActionPerformed

    private void btn_multiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_multiActionPerformed
        num = Double.parseDouble(txtDisplay.getText());
        operator = 'x';
        save();
    }//GEN-LAST:event_btn_multiActionPerformed

    private void btn_divideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_divideActionPerformed
        num = Double.parseDouble(txtDisplay.getText());
        operator = '/';
        save();
    }//GEN-LAST:event_btn_divideActionPerformed

    private void btn_abActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_abActionPerformed
        num = Double.parseDouble(txtDisplay.getText());
        operator = '^';
        save();
    }//GEN-LAST:event_btn_abActionPerformed

    private void btn_sqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sqrtActionPerformed
        System.out.println("txtDisplay.getText()" + txtDisplay.getText());
        if (txtDisplay.getText().isEmpty()) {
            txtDisplay.setText("1");
        }
        num = Double.parseDouble(txtDisplay.getText());
        operator = '√';
        save();
    }//GEN-LAST:event_btn_sqrtActionPerformed

    private void btn_percenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_percenActionPerformed
        num = Double.parseDouble(txtDisplay.getText());
        operator = '%';
        save();
    }//GEN-LAST:event_btn_percenActionPerformed

    private void btn_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delActionPerformed
       String text = txtDisplay.getText();
        if (!text.isEmpty()) {
            txtDisplay.setText(text.substring(0, text.length() - 1));
        }
    }//GEN-LAST:event_btn_delActionPerformed

    private void btn_demicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_demicalActionPerformed
        if( ! txtDisplay.getText().contains(".")){
            txtDisplay.setText(txtDisplay.getText() + btn_demical.getText() );
        }
    }//GEN-LAST:event_btn_demicalActionPerformed

    private void numberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberButtonActionPerformed
        if (isResultDisplayed) {
            txtDisplay.setText(""); // Xóa nội dung nếu trước đó đã hiển thị kết quả
            isResultDisplayed = false; // Reset cờ
        }
        JButton btn = (JButton) evt.getSource();  // Lấy nút được nhấn
            txtDisplay.setText(txtDisplay.getText() + btn.getText());
    }//GEN-LAST:event_numberButtonActionPerformed

    private void btn_equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_equalActionPerformed
        DecimalFormat df = new DecimalFormat("#.########");
        
        if (!txtDisplay.getText().isEmpty()) {
            num = Double.parseDouble(txtDisplay.getText()); // Đảm bảo số cuối cùng cũng vào stack
            stackNum.push(num); //đẩy số cuối vào stack
            
            //update expression
            Expression += txtDisplay.getText();
            //debug
            System.err.println("Dẩy vào stack " +num);   
        }
        
        if (!stackOperator.isEmpty() && 
                (stackOperator.peek() == 'x' 
                || stackOperator.peek() == '/' 
                || stackOperator.peek() == '^' 
                || stackOperator.peek()== '%' 
                || stackOperator.peek()== '√' )
                ) {
            calculateImmediate(); // Tính toán nếu cần   
        }
        while (!stackOperator.isEmpty()) {
            calculateFinal();
            // Xử lý các phép toán còn lại (cộng/trừ)
        }
        if (!stackNum.isEmpty()) {
            result = stackNum.pop(); // lấy phần tử từ stack
            txtDisplay.setText(df.format(result)); // Hiển thị kết quả
            
            history.add(Expression + " = " + df.format(result)); // lưu vào history
            Expression = ""; 
            isResultDisplayed= true;
            
            if (result == Double.POSITIVE_INFINITY) {
                txtDisplay.setText("Math ERROR");
                return;
            }
            //DEBUG 
            System.out.println("kqa cuoi cung" +result);    
        }
    }//GEN-LAST:event_btn_equalActionPerformed

    private void calculateImmediate() {
        if (stackOperator.isEmpty()) return;
        // lấy b trước vì stack là LIFO
        double b = (stackNum.isEmpty()) ? 1 : stackNum.pop();  // Lấy số trước đó từ stackNum
        double a = (stackNum.isEmpty()) ? b : stackNum.pop();  // 
        char op = stackOperator.pop();
        
        System.out.println("Tính toán ngay: " + a + " " + op + " " + b); //Debug
        try {
            switch(op) {
                case 'x': 
                    result = a * b; 
                    if (Double.isInfinite(a * b)) {
                        txtDisplay.setText("Overflow ERROR");
                        return;
                    }
                    break;
                case '/': 
                    if (b == 0) {
                        throw new ArithmeticException("Math ERROR");
                    }
                    result = a / b;
                    break;
                case '%': 
                    if (stackNum.isEmpty()) { 
                        result = a / 100; // Nếu chỉ có một số, tính phần trăm
                    } else {
                        result = a * (b / 100); // Nếu có hai số: tính phần trăm của số trước đó
                    }
                break; //tính phần trăm của a
                case '^': 
                    try {
                        result = Math.pow(a, b);
                        if (Double.isInfinite(result)) {
                            throw new ArithmeticException("Overflow ERROR");
                        }
                    } catch (ArithmeticException e) {
                        System.err.println("Lỗi toán học: " + e.getMessage());
                    } catch (StackOverflowError e) {
                        System.err.println("LỖI NGHIÊM TRỌNG: Stack Overflow! Chương trình sẽ dừng ngay!");
                        System.exit(1); // Thoát chương trình với mã lỗi 1
                    }
                    break;
                case '√': 
//                    b = stackNum.pop();
//                    a = stackNum.pop() + 1;
//                     System.out.println("b" + b);
//                      System.out.println("a" + a);
//                    if(a<0){
//                        throw new ArithmeticException("Math ERROR");
//                    }else{
//                        result = Math.sqrt(a);
//                    }break;
                    if(b<0) throw new ArithmeticException("Math ERROR");
                    if (a==1) {
                        result = Math.sqrt(b);
                    }else{
                         result = a* Math.sqrt(b);
                    }
                    break;
            }
            stackNum.push(result); // Đẩy kết quả vào stackNum
            txtDisplay.setText(String.valueOf(result)); // Xóa màn hình để nhập số tiếp theo
        } catch(ArithmeticException e){
            txtDisplay.setText(e.getMessage());
        } catch (Exception e) {
        txtDisplay.setText("Systan ERROR");
    }
}

    private void calculateFinal() {
        try{
            if (stackNum.size() < 2 || stackOperator.isEmpty()) return;

             // Đảo ngược thứ tự lấy số và toán tử
            double a = stackNum.remove(0);  // Lấy số đầu (54)
            double b = stackNum.remove(0);  // Lấy số tiếp theo (15)
            char op = stackOperator.remove(0);  // Lấy toán tử đầu ('-')

            switch (op) {
                case '+': 
                    result = a + b; break;
                case '-': 
                    result = a - b; break;   
            }
            System.out.println("result: " + result);
            stackNum.push(result); // Đẩy kết quả vào stack để tính tiếp
        }catch(Exception e){
            txtDisplay.setText("ERROR");
        }
    }
    private void btn_CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CActionPerformed
         txtDisplay.setText("");
         stackNum.clear();
         stackOperator.clear();
    }//GEN-LAST:event_btn_CActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
//       if (history.isEmpty()) {
//            txtDisplay.setText("NULL");
//       } else {
//            historyIndex--;
//            if (historyIndex < 0) { // Nếu đã vượt quá đầu danh sách, quay lại phần tử cuối
//                historyIndex = history.size() - 1;
//            }
//            txtDisplay.setText(history.get(historyIndex));
//        }
        
        if (!isHistoryVisible) {
            StringBuilder historyText = new StringBuilder();

            // Duyệt qua danh sách history và ghép các phép tính thành chuỗi
            for (String record : history) {
                historyText.append(record).append("\n");
            }
            txtHistory.setText(historyText.toString()); // Gán nội dung vào JTextArea
            txtHistory.setVisible(true); // Hiển thị JTextArea
            txtDisplay.setVisible(false);
            isHistoryVisible = true;
        } else {
            txtHistory.setVisible(false); // Ẩn JTextArea nếu đã mở
            txtDisplay.setVisible(true);
            isHistoryVisible = false;
        }
        txtHistory.revalidate();
        txtHistory.repaint();
        txtDisplay.revalidate();
        txtDisplay.repaint();
    }//GEN-LAST:event_btn_backActionPerformed

    private void txtDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDisplayActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculatorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculatorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculatorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculatorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculatorJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btn_C;
    private javax.swing.JButton btn_ab;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_del;
    private javax.swing.JButton btn_demical;
    private javax.swing.JButton btn_divide;
    private javax.swing.JButton btn_equal;
    private javax.swing.JButton btn_multi;
    private javax.swing.JButton btn_percen;
    private javax.swing.JButton btn_plus;
    private javax.swing.JButton btn_sqrt;
    private javax.swing.JButton btn_subtract;
    private java.awt.Label label1;
    private javax.swing.JButton num0;
    private java.awt.TextField textField1;
    private java.awt.TextField txtDisplay;
    private java.awt.TextArea txtHistory;
    // End of variables declaration//GEN-END:variables
}
